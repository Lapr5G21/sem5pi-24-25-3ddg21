name: .NET Build, Test & Deploy

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    
    - name: Restore dependencies
      run: dotnet restore ./dddnetcore/dddnetcore.csproj

    - name: Build
      run: dotnet build ./dddnetcore/dddnetcore.csproj --no-restore

    - name: Test
      run: dotnet test ./dddnetcore/dddnetcore.csproj --no-build --verbosity normal

    - name: Publish for deployment
      run: dotnet publish ./dddnetcore/dddnetcore.csproj -c Release -o ./publish

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dotnet-build
        path: ./publish

  deploy:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Download Build Artifacts
        uses: actions/download-artifact@v3
        with:
          name: dotnet-build
      
      - name: Set up SSH key for deploy
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy to server via SSH
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          port: ${{ secrets.SERVER_PORT }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Navega até o diretório de deploy no servidor
            cd /root/apps/healthcare  
            
            # Extraí os artefatos do build
            tar -xzvf ./dotnet-build.tar.gz -C .  
            
            # Restaura as dependências, compila e publica, se necessário
            dotnet restore ./dddnetcore/dddnetcore.csproj  
            dotnet build ./dddnetcore/dddnetcore.csproj --no-restore  
            dotnet publish ./dddnetcore/dddnetcore.csproj -c Release -o /root/apps/healthcare  
            
            # Reinicia o serviço do servidor
            systemctl restart healthcare_deploy
