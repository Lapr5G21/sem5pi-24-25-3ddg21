@startuml
title Upload Requirements File - Class Diagram

class JobRequirementsUploadUI {
    +allJobApplications(jobReference: String): Iterable<JobApplication>
    +validateFile(inputPath: String, outputPath: String, jobReference: String): String
}

class JobRequirementsUploadController {
    +create(): void
    +allJobApplications(jobReference: String): Iterable<JobApplication>
    +validateFile(inputPath: String, outputPath: String, jobReference: String): String
}

class PersistenceContext {
    +create(): void
}

class RepositoryFactory {
    +factory(): RepositoryFactory
    +jobApplications(): JobApplicationRepository
    +jobRequirements(): JobRequirementsRepository
}

class JobApplicationService {
    +create(jobApplicationRepository: JobApplicationRepository): void
    +findByJobReference(jobReference: String): Iterable<JobApplication>
}

class JobRequirementsPlugin {
    +evaluateJobRequirement(Input: String, Output: String): String
}

class JobApplicationRepository {
    +findByJobReference(jobReference: String): Iterable<JobApplication>
}

class JobRequirementsRepository {
    +findByJobReference(jobReference: String): JobRequirements
}

JobRequirementsUploadUI --> JobRequirementsUploadController : theController
JobRequirementsUploadController --> PersistenceContext : persistence
JobRequirementsUploadController --> RepositoryFactory : factory
RepositoryFactory --> JobApplicationRepository : jobApplicationRepository
RepositoryFactory --> JobRequirementsRepository : jobRequirementsRepository
JobRequirementsUploadController --> JobApplicationService : jobApplicationService
JobApplicationService --> JobApplicationRepository : jobApplicationRepository
JobRequirementsUploadController --> JobRequirementsPlugin : interviewPlugin

@enduml
