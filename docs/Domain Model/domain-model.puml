@startuml

skinparam packageStyle rectangle
skinparam package {
    BackgroundColor #ffffff
    BorderColor #000000
}

hide methods

package UserAggregate #00ff00 {
    entity User <<root>> <<entity>> {}
    class Email <<ValueObject>> {}
    class Username <<ValueObject>> {}
    class Role <<ValueObject>> {}

    User "1" --> "1" Email 
    User "1" --> "1" Username
    User "1" --> "1" Role 
}


package SpecializationAggregate #ffffdd {

    entity Specialization <<entity>> <<root>>{}

    class SpecializationName <<ValueObject>>{}
    class SpecializationId <<ValueObject>>{}

    Specialization "1" --> "1" SpecializationId
    Specialization "1" --> "1" SpecializationName
}
package StaffAggregate #ffaa00 {
    entity Staff <<root>> <<entity>> {}

    class LicenseNumber <<ValueObject>> {}
    class StaffId<<ValueObject>> {}
    class StaffContactInformation <<ValueObject>> {}
    class StaffEmail<<ValueObject>> {}
    class StaffPhoneNumber<<ValueObject>> {}
    class AvailabilitySlots {}
    class StaffFirstName <<ValueObject>> {}
    class StaffLastName <<ValueObject>> {}

    Staff "1" --> "0..1" User
    Staff "1" --> "1" LicenseNumber
    Staff "1" --> "1" Specialization
    Staff "1" --> "1" StaffContactInformation
    Staff "1" --> "1.." AvailabilitySlots
    Staff "1" --> "1" StaffFirstName
    Staff "1" --> "1" StaffId
    Staff "1" --> "1" StaffLastName
    StaffContactInformation "1" --> "1" StaffEmail
    StaffContactInformation "1" --> "1" StaffPhoneNumber
}

package PatientAggregate #aabbdd {
    entity Patient <<root>> <<entity>> {}
    class BirthDate <<ValueObject>> {}
    class Gender <<enum>> <<ValueObject>> {
        male 
        female
        ratherNotSay
    }
    class MedicalRecordNumber <<ValueObject>> {}
    class PatientContactInformation <<ValueObject>> {} /' Repeated class '/
    class PatientEmail<<ValueObject>> {}
    class PatientPhoneNumber<<ValueObject>> {}
    class Allergies <<ValueObject>> {}
    class EmergencyContact <<ValueObject>> {}
    class AppointmentHistory <<ValueObject>> {}
    class PatientFirstName <<ValueObject>> {}
    class PatientLastName <<ValueObject>> {}

    Patient "1" --> "0..1" User 
    Patient "1" --> "1" BirthDate 
    Patient "1" --> "1" Gender 
    Patient "1" --> "1" MedicalRecordNumber 
    Patient "1" --> "1" PatientContactInformation 
    Patient "1" --> "0.." Allergies
    Patient "1" --> "1" EmergencyContact
    Patient "1" --> "0.." AppointmentHistory 
    Patient "1" --> "1" PatientFirstName
    Patient "1" --> "1" PatientLastName
    PatientContactInformation "1" --> "1" PatientEmail
    PatientContactInformation "1" --> "1" PatientPhoneNumber
}


package OperationRequestAggregate #aaaaff {
    entity OperationRequest <<root>> <<entity>> {}

    class OperationRequestID <<ValueObject>> {}
    class DeadlineDate <<date>> <<ValueObject>> {}
    enum Priority <<ValueObject>> {
        elective
        urgent 
        emergency 
    }
    enum Status <<ValueObject>>{
        onScheduled
        scheduled
    }

    OperationRequest "1" --> "1" Staff : has 
    OperationRequest "1" --> "1" Patient : has 
    OperationRequest "1" --> "1" OperationType : has 
    OperationRequest "1" --> "1" OperationRequestID 
    OperationRequest "1" --> "1" DeadlineDate
    OperationRequest "1" --> "1" Priority 
    OperationRequest "1" --> "1" Status    
}


package OperationTypeAggregate #bbbbbb {
    entity OperationType <<root>> <<entity>> {}

    class OperationTypeId <<ValueObject>> {}
    class OperationTypeName <<ValueObject>> {}
    class EstimatedDuration <<ValueObject>> {}
    class AnesthesiaTime <<ValueObject>>{}
    class CleaningTime <<ValueObject>>{}
    class SurgeryTime <<ValueObject>>{}


    OperationType "1" --> "1" OperationTypeId
    OperationType "1" --> "1" OperationTypeName
    OperationType "1" --> "1" EstimatedDuration
    OperationType "1" --> "1" AnesthesiaTime
    OperationType "1" --> "1" CleaningTime
    OperationType "1" --> "1" SurgeryTime   
    OperationType "1" --> "1.." Specialization : has
}


package AppointmentAggregate #ddccdd {
    entity Appointment <<root>> <<entity>> {}

    class AppointmentId <<ValueObject>> {}
    class DateAndTimeOfTheOperation <<ValueObject>> {}
    enum Status <<enum>> {
        scheduled
        completed
        canceled
    }

    Appointment "1" --> "1" OperationRequest : has 
    Appointment "1" --> "1" SurgeryRoom : has 
    Appointment "1" --> "1" AppointmentId
    Appointment "1" --> "1" DateAndTimeOfTheOperation 
    Appointment "1" --> "1" Status 
}


package SurgeryRoomAggregate #ddeeff {
    entity SurgeryRoom <<root>> <<entity>> {}

    class RoomId <<ValueObject>> {}
    class Type <<ValueObject>> {}
    class Capacity <<ValueObject>> {}
    class Equipment <<ValueObject>> {}
    enum CurrentStatus <<enum>> <<ValueObject>> {}
    class MaintenanceSlots <<ValueObject>> {} /' ???? '/

    SurgeryRoom "1" --> "1" RoomId
    SurgeryRoom "1" --> "1" Type
    SurgeryRoom "1" --> "1" Capacity
    SurgeryRoom "1" --> "1.." Equipment
    SurgeryRoom "1" --> "1" CurrentStatus
    SurgeryRoom "1" --> "1.." MaintenanceSlots 
}

@enduml
