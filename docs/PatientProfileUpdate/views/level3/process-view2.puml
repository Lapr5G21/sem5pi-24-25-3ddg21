@startuml PatientProfileUpdate(level3-2)

autonumber
actor Admin as "Admin"
participant CTRL as "PatientsController"
participant SERVICE as "PatientService <<service>>"
participant PATIENT as "Patient <<domain>>"
participant REPO as "Patient Repository"
participant EMAILSERVICE as "EmailService <<service>>"
participant DTO as "editingPatientDTO : PatientDTO"

Admin-> CTRL : PUT /api/patients/{id}
activate CTRL

CTRL -> SERVICE : UpdateAsync(editingPatientDTO)
activate SERVICE

    SERVICE -> REPO : GetByIdAsync()
    activate REPO

    REPO --> SERVICE : patient
    deactivate REPO
    
    SERVICE -> PATIENT : update(editingPatientDTO.FirstName, editingPatientDTO.LastName, editingPatientDTO.FullName, editingPatientDTO.Email, editingPatientDTO.PhoneNumber, editingPatientDTO.Address)
    activate PATIENT

    PATIENT --> SERVICE : patientUpdated
    deactivate PATIENT

    SERVICE -> REPO : save(patientUpdated)
    activate REPO

    REPO --> SERVICE : patientUpdated
    deactivate REPO

    SERVICE -> EMAILSERVICE : sendEmailAsync(patient.Email, message)
    activate EMAILSERVICE

    EMAILSERVICE --> SERVICE : emailSent
    deactivate EMAILSERVICE

    activate DTO
    
    SERVICE -> DTO : create(editingPatientDTO.FirstName, editingPatientDTO.LastName, editingPatientDTO.FullName, editingpatientDTO.BirthDate, editingPatientDTO.Gender, editingPatientDTO.Email, editingPatientDTO.PhoneNumber, editingPatientDTO.Address, editingPatientDTO.EmergencyContact)
    
    DTO --> SERVICE : patientDto
    deactivate DTO

    SERVICE -> CTRL : patientDto
    
    CTRL --> Admin : 200 Patient Profile Updated

deactivate SERVICE
deactivate CTRL
@enduml
