@startuml 
autonumber
actor Admin as "Admin"
participant CTRL as "StaffController"
participant SERVICE as "StaffService <<service>>"
participant StaffDomain as "Staff"
participant EmailService as "EmailService"
participant StaffDto as "StaffDto"
database ILogRepository as "ILogRepository"
database IStaffRepository as "IStaffRepository"


opt want to filter
    Admin -> CTRL : GET /api/staffs{searchVariable}
    activate BE
            CTRL -> SERVICE : searchStaffAsync(searchVariable)
        activate SERVICE 
                SERVICE -> IStaffRepository : getBy"searchVariable"(searchVariable)
                activate IStaffRepository
                IStaffRepository --> SERVICE : staffsList
                deactivate IStaffRepository
            SERVICE --> CTRL : staffsList
        deactivate SERVICE 
    CTRL --> Admin : 200 Ok
    deactivate CTRL
end

activate Admin

Admin -> CTRL : PUT /api/staffs/{id}
activate CTRL

CTRL -> SERVICE : updateAsync(editingStaffDto)
activate SERVICE

SERVICE -> IStaffRepository : getByIdAsync(editingStaffDto.staffId)

activate IStaffRepository

IStaffRepository --> SERVICE : staff

deactivate IStaffRepository

SERVICE -> StaffDomain : changeStaff(editingStaffDto)

opt oldEmail != staff.email || oldPhoneNumber != staff.phoneNumber

SERVICE -> EMAILSERVICE : sendEmailAsync(staff.Email,content)

activate EMAILSERVICE

EMAILSERVICE --> SERVICE : emailSent

deactivate EMAILSERVICE

end opt

SERVICE -> ILogRepository : LogUpdateOperation(LogCategoryType.STAFF_PROFILE,details)

activate ILogRepository

ILogRepository --> SERVICE : log 

deactivate ILogRepository

SERVICE -> ILogRepository : save(log)

activate ILogRepository

ILogRepository --> SERVICE : log 

deactivate ILogRepository

SERVICE -> StaffDto : create()

activate StaffDto
StaffDto --> SERVICE : staffDto
deactivate StaffDto

SERVICE --> CTRL : stafftDto

deactivate SERVICE 

CTRL --> Admin : 200 OK

deactivate CTRL 

deactivate Admin
@enduml