@startuml
title Evaluate Interviews Class Diagram

'skinparam
skinparam handwritten false
skinparam packageStyle rect
skinparam defaultFontName FG Virgil
skinparam shadowing false

class EvaluateInterviewsUI {
    + boolean doShow()
    + String headline()
}

class EvaluateInterviewsController {
    + Iterable<JobApplication> allApplications(String jobReference)
    + void evaluateInterview(String directoryFilePath, JobApplication application, String jobReference)
}

class JobApplicationService {
    + Iterable<JobApplication> listAllApplications(String jobReference)
}

interface JobApplicationRepository {
    + Iterable<JobApplication> findByJobReference(String jobReference)
}

class PersistenceContext {
    + static RepositoryFactory repositories()
}

class Interview {
}

class InterviewBuilder {
    + InterviewBuilder withTitle(String title)
    + InterviewBuilder withDate(Calendar date)
    + InterviewBuilder withModel(String jobReference, String pluginName)
    + Interview build()
}

interface InterviewRepository {
    + void save(interview)
}


interface InterviewModelRepository {
    + Optional<InterviewModel> findByJobReference(String jobReference)
}


interface InterviewModelPlugin {
    + Interview evaluateInterviewAndShowGrades(String directoryFilePath, Interview interview)
}

EvaluateInterviewsUI --> EvaluateInterviewsController : the controller
EvaluateInterviewsController --> JobApplicationService : service
JobApplicationService --> PersistenceContext : persist
EvaluateInterviewsController --> PersistenceContext : persist
EvaluateInterviewsController --> InterviewBuilder : build
InterviewBuilder --> Interview : interview
EvaluateInterviewsController --> InterviewModelPlugin : plugin
PersistenceContext --> RepositoryFactory : factory
RepositoryFactory --> InterviewRepository : interview repository
RepositoryFactory --> JobApplicationRepository : job application repository
RepositoryFactory --> InterviewModelRepository : interview model repository


@enduml