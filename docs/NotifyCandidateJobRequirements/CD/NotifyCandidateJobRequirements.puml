@startuml
class NotifyCandidateJobRequirementsUI <<presentation>>{
        + headline(): String
        + doShow(): boolean
    }

    class NotifyCandidateJobRequirementsController<<application>> {
        + notifyCandidateRequirements(String jobReference, JobApplication application) : void
        + listAndSelectApplications(String jobReference) : Iterable<JobApplication>
    }

    class CandidateService <<service>>{
        + findByJobReference(jobReference:String) : Iterable<JobApplication>
        -  emailSuccessTemplate (JobApplication application, SystemUser customerManager) :String
        -  emailUnsuccessfulTemplate (JobApplication application, SystemUser customerManager) :String
        + notifyCandidateRequirements(JobApplication application, SystemUser costumerManager) :void
    }

    class PersistenceContext {
        + repositories(): RepositoryFactory
    }

    class RepositoryFactory {
        + applications(): JobApplicationRepository
        + jobOpeningProcesses() : JobOpeningProcessRepository
        + ranks() : RankRepository
    }

    class JobApplicationRepository {
        + findByJobReference(jobReference : String): Iterable<JobApplication>
    }

    class JobOpeningProcessRepository{
        + findByJobReference(jobReference : String)
    }

    class Candidate {
        + systemUser() : SystemUser
    }

    class Candidate {
        - changeApplicationStatus(applicationStatus : ApplicationStatus) : JobApplication
    }



NotifyCandidateJobRequirementsUI --> NotifyCandidateJobRequirementsController: theController
NotifyCandidateJobRequirementsController --> CandidateService: jobApplicationService
NotifyCandidateJobRequirementsController --> JobOpeningProcessRepository : jobOpeningProcessRepository
CandidateService --> CandidateRepository: jobApplicationRepository
CandidateService --> Candidate : jobApplication
CandidateService --> JobApplicationRepository

NotifyCandidateJobRequirementsController --> PersistenceContext : persistence
PersistenceContext --> RepositoryFactory : factory
@enduml