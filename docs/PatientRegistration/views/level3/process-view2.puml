@startuml 
autonumber
actor Patient as PATIENT
participant CTRL as "UsersController"
participant SERVICE as "UserService <<service>>"
participant User as "User <<domain>>"
participant Patient as "Patient <<domain>>"
participant USERREPO as "UserRepository"
participant PATIENTREPO as "Patient Repository"
participant DTO as "creatingPatientUserDTO : PatientUserDTO"
participant CONFIG as "Configuration"
participant AUTH0User as "Auth0User"
participant AUTH0SERVICE as "Auth0Service"
activate PATIENT
PATIENT-> CTRL : POST /api/users/patients
activate CTRL

CTRL -> SERVICE : addPatientUserAsync(creatingUserDTO)
activate SERVICE

SERVICE -> PATIENTREPO : GetByEmailAsync(creatingUserDTO.email)
activate PATIENTREPO
alt Patient not found (patient == null)

    activate PATIENTREPO

    PATIENTREPO -> SERVICE : 404 NotFound
    
    deactivate PATIENTREPO

    SERVICE -> CTRL : 404 NotFound

else Patient found (patient != null)
    PATIENTREPO -> SERVICE : patient
    deactivate PATIENTREPO

    SERVICE -> User : create(creatingPatientUserDTO.email, creatingPatientUserDTO.username, creatingPatientUserDTO.password)
    activate User

    User -> SERVICE : patientUserCreated
    deactivate User

    SERVICE -> Patient : setUser(userCreated)

    SERVICE -> CONFIG : Get Auth0:Domain, Auth0:ClientId, Auth0:ClientSecret, Auth0:Audience
    activate CONFIG
    CONFIG --> SERVICE : return values
    deactivate CONFIG

    SERVICE -> AUTH0USER : create(dto.Email,dto.Password,auth0ClientId,auth0ClientSecret,role)

    activate AUTH0USER

    AUTH0USER -> SERVICE : auth0User

    deactivate AUTH0USER

    SERVICE -> AUTH0SERVICE : PostAsJsonAsync($"https://{auth0Domain}/api/v2/users", auth0User)

    activate AUTH0SERVICE 

    AUTH0SERVICE -> SERVICE : responseSucceed
    deactivate AUTH0SERVICE

    SERVICE -> USERREPO : save(userCreated)
    activate USERREPO

    USERREPO -> SERVICE : userSaved
    deactivate USERREPO

    SERVICE -> PATIENTREPO : save(patient)
    activate PATIENTREPO

    PATIENTREPO -> SERVICE : patientSaved
    deactivate PATIENTREPO

    SERVICE -> DTO : create(creatingPatientUserDTO.email,creatingPatientUserDTO.username,user.role) 

    activate DTO

    DTO -> SERVICE : userPatientDTO

    deactivate DTO 

    SERVICE -> CTRL : userDTO

    deactivate SERVICE
    
    PATIENT <-- CTRL : 201 User created and user information

else 
end
deactivate CTRL
deactivate PATIENT

@enduml
